x-logging: &default-logging
  driver: json-file
  options:
    max-file: "10"
    max-size: 200k

x-common-keys: &common-keys
  restart: unless-stopped
  logging: *default-logging

x-common-env: &common-env
  PGID: "1000"
  PUID: "1000"
  TZ: America/Los_Angeles

x-common-volumes:
  - &localtime /etc/localtime:/etc/localtime:ro
  - &storage {{ docker_storage_path }}:/storage

networks:
  proxy-vlan:
    name: proxy-vlan
    driver: ipvlan
    driver_opts:
      parent: vmbr0 # using ifconfig
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          ip_range: "192.168.1.9/32"
          gateway: "192.168.1.1"
  external_proxy_bridge: 
    name: external_proxy_bridge
    ipam: 
      config: 
        - gateway: 10.10.0.1
          subnet: 10.10.0.0/24

services:
  npm-internal:
    <<: *common-keys
    container_name: npm-internal
    image: 'jc21/nginx-proxy-manager:latest'
    environment:
      <<: *common-env
      DISABLE_IPV6: 'true'
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    networks:
      default:
      ta-network:
    volumes:
      - {{ docker_home_appdata_path }}/npm-internal/data:/data
      - {{ docker_home_appdata_path }}/npm-internal/letsencrypt:/etc/letsencrypt
    # 1) Add A record in domain registrar mapping internal subdomain (e.g. 'internal.example.com') to internal proxy' IP (e.g. 192.168.1.54)
    # 2) Add wildcard record in DNS Resolver for same
    #    https://docs.netgate.com/pfsense/en/latest/services/dns/wildcards.html#dns-resolver-unbound
    # 3) Define proxy hosts with (Docker) internal hostnames (e.g. roms.internal.example.com -> gaseous-server:80 )

  npm-external:
    <<: *common-keys
    container_name: npm-external
    image: 'jc21/nginx-proxy-manager:latest'
    environment:
      <<: *common-env
      DISABLE_IPV6: 'true'
    # ports:
    #  These ports are in format <host-port>:<container-port>
    #  - '80:80' # Public HTTP Port
    #  - '443:443' # Public HTTPS Port
    #  - '81:81' # Admin Web Port
    networks:
      authentik:
      gaseous:
      external_proxy_bridge:
      proxy-vlan:
        ipv4_address: 192.168.1.9 # IP address inside the defined range
    # Note that proxy host destinations must use hostname:internal-port
    # Example:
    #   http://overseerr:5055

    volumes:
      - {{ docker_home_appdata_path }}/npm/data:/data
      - {{ docker_home_appdata_path }}/npm/letsencrypt:/etc/letsencrypt

  fail2ban:
    # See: https://blog.lrvt.de/fail2ban-with-nginx-proxy-manager/
    # Note that NPM must include configuration in the advanced tab of proxy host with CloudFlare proxy: real_ip_header CF-Connecting-IP;
    <<: *common-keys
    container_name: fail2ban
    hostname: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      <<: *common-env
      F2B_DB_PURGE_AGE: "14d"
    image: crazymax/fail2ban:latest
    network_mode: host
    restart: unless-stopped
    volumes:
      - {{ docker_home_appdata_path }}/fail2ban:/data
      - {{ docker_home_appdata_path }}/npm/data/logs:/var/log/npm:ro