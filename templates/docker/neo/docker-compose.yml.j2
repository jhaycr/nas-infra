name: compose
version: '3'

x-logging: &default-logging
  driver: json-file
  options:
    max-file: "10"
    max-size: 200k

x-common-keys: &common-keys
  restart: unless-stopped
  logging: *default-logging

x-common-env: &common-env
  PGID: "1000"
  PUID: "1000"
  TZ: America/Los_Angeles

x-common-volumes:
  - &localtime /etc/localtime:/etc/localtime:ro
  - &storage {{ docker_storage_path }}:/storage

services:
  audiobookshelf:
    <<: *common-keys
    container_name: audiobookshelf
    image: ghcr.io/advplyr/audiobookshelf:latest
    environment:
      <<: *common-env
    ports:
      - "13378:80"
    volumes:
      - *localtime
      - *storage
      - {{ docker_storage_path }}/media/audio/audiobooks:/audiobooks
      - {{ docker_storage_path }}/media/audio/podcasts:/podcasts
      - {{ docker_home_appdata_path }}/audiobookshelf:/config
      - {{ docker_storage_path }}/media/audio/:/metadata1

  bazarr:
    <<: *common-keys
    container_name: bazarr
    image: lscr.io/linuxserver/bazarr:latest
    environment:
      <<: *common-env
    ports:
      - "6767:6767"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/bazarr:/config

  calibreweb:
    <<: *common-keys
    container_name: calibreweb
    image: lscr.io/linuxserver/calibre-web:latest
    environment:
      <<: *common-env
    ports:
      - "8083:8083"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/calibreweb:/config

  deluge:
    <<: *common-keys
    container_name: deluge
    image: linuxserver/deluge:5b398f77-ls22
    # image: lscr.io/linuxserver/deluge:latest
    environment:
      <<: *common-env
    ports:
      - "6881:6881"
      - "6881:6881/udp"
      - "8112:8112"
      - "51413:51413"
      - "51413:51413/udp"
      - "58846:58846"
      - "58946:58946"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/deluge:/config
      - {{ docker_storage_path }}/media/Anime:/anime
      - {{ docker_storage_path }}/downloads:/download

  filebot:
    <<: *common-keys
    container_name: filebot
    image: jlesage/filebot:latest
    environment:
      <<: *common-env
    ports:
      - "5800:5800"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/filebot:/config
      - /mnt/filebot/output:/output
      - /mnt/filebot/watch:/watch

  freshrss:
    <<: *common-keys
    container_name: freshrss
    image: lscr.io/linuxserver/freshrss:latest
    environment:
      <<: *common-env
    ports:
      - "8012:80"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/freshrss:/config

  homepage:
    <<: *common-keys
    container_name: homepage
    image: ghcr.io/gethomepage/homepage:latest
    environment:
      <<: *common-env
    ports:
      - 3000:3000
    volumes:
      - {{ docker_home_appdata_path }}/homepage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations

  komga:
    <<: *common-keys
    container_name: komga
    image: gotson/komga
    environment:
      <<: *common-env
      KOMGA_OAUTH2_ACCOUNT_CREATION: "true"
    ports:
      - "25600:25600"
    volumes:
      - {{ docker_home_appdata_path }}/komga:/config
      - {{ docker_storage_path }}/comics:/data
      - {{ docker_storage_path }}/storage/Books:/books

  maintainerr:
    <<: *common-keys
    container_name: maintainerr
    image: ghcr.io/jorenn92/maintainerr:latest
    environment:
      <<: *common-env
    ports:
      - "6246:6246"
    user: 1000:1000
    volumes:
      - {{ docker_home_appdata_path }}/maintainerr:/opt/data

  mylar3:
    <<: *common-keys
    container_name: mylar3
    image: lscr.io/linuxserver/mylar3:latest
    environment:
      <<: *common-env
    ports:
      - "8090:8090"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/mylar3:/config
      - {{ docker_storage_path }}/downloads:/downloads

  ombi:
    <<: *common-keys
    container_name: ombi
    image: lscr.io/linuxserver/ombi:latest
    environment:
      <<: *common-env
    ports:
      - "3579:3579"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/ombi:/config

  ouroboros:
    <<: *common-keys
    container_name: ouroboros
    image: pyouroboros/ouroboros:latest
    environment:
      <<: *common-env
      CLEANUP: "true"
      CRON: 0 4 * * *
      IGNORE: ""
      LOG_LEVEL: info
      MONITOR: ""
      NOTIFIERS: ""
      REPO_PASS: ""
      REPO_USER: ""
      SELF_UPDATE: "true"
    volumes:
      - *localtime
      - *storage
      - /var/run/docker.sock:/var/run/docker.sock

  overseerr:
    <<: *common-keys
    container_name: overseerr
    image: linuxserver/overseerr:1.33.2
    environment:
      <<: *common-env
    ports:
      - "5055:5055"
    volumes:
      - {{ docker_home_appdata_path }}/overseerr:/config

  portainer:
    <<: *common-keys
    container_name: portainer
    image: portainer/portainer-ce:latest
    command:
      - -H
      - unix:///var/run/docker.sock
    environment:
      <<: *common-env
    ports:
      - "9000:9000"
    volumes:
      - *localtime
      - *storage
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ docker_home_appdata_path }}/portainer:/data

  prowlarr:
    <<: *common-keys
    container_name: prowlarr
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      <<: *common-env
    ports:
      - "9696:9696"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/prowlarr:/config

  radarr:
    <<: *common-keys
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    environment:
      <<: *common-env
    ports:
      - "7878:7878"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/radarr:/config
      - {{ docker_storage_path }}/downloads:/downloads
      - {{ docker_storage_path }}/media/Movies:/storage/movies
  
  restic:
    <<: *common-keys
    container_name: restic-server
    image: restic/rest-server:0.13.0
    environment:
      <<: *common-env
    ports:
      - "8500:8000"
    volumes:
      - {{ docker_storage_path }}/backups:/data
  
  sabnzbd:
    <<: *common-keys
    container_name: sabnzbd
    image: lscr.io/linuxserver/sabnzbd:latest
    environment:
      <<: *common-env
    ports:
      - "8080:8080"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/sabnzbd:/config
      - {{ docker_storage_path }}/downloads:/downloads
  
  # https://github.com/AnalogJ/scrutiny
  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    cap_add:
      - SYS_RAWIO
    ports:
      - "8082:8080" # webapp
      - "8086:8086" # influxDB admin
    volumes:
      - /run/udev:/run/udev:ro
      - ./appdata/scrutiny:/opt/scrutiny/config
      - ./appdata/scrutiny-influxdb:/opt/scrutiny/influxdb
    devices:
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde"

  sonarr:
    <<: *common-keys
    container_name: sonarr
    image: lscr.io/linuxserver/sonarr:latest
    environment:
      <<: *common-env
    ports:
      - "8989:8989"
    volumes:
      - *localtime
      - *storage
      - {{ docker_home_appdata_path }}/sonarr:/config
      - {{ docker_storage_path }}/downloads:/downloads
      - {{ docker_storage_path }}/media/TV:/storage/tv

  tautulli:
    <<: *common-keys
    container_name: tautulli
    image: lscr.io/linuxserver/tautulli:latest
    environment:
      <<: *common-env
    ports:
      - "8181:8181"
    volumes:
      - {{ docker_home_appdata_path }}/tautulli:/config

  uptimekuma:
    <<: *common-keys
    container_name: uptimekuma
    image: louislam/uptime-kuma:latest
    environment:
      <<: *common-env
    ports:
      - "3001:3001"
    volumes:
      - {{ docker_home_appdata_path }}/uptimekuma:/app/data
      - *localtime
      - *storage
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  default:
    name: compose_default