- name: Ensure image directory exists
  ansible.builtin.file:
    path: "{{ proxmox_image_dir }}"
    state: directory

- name: Download cloud images
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ proxmox_image_dir }}/{{ item.filename }}"
    mode: '0644'
  loop: "{{ proxmox_images }}"
  loop_control:
    label: "{{ item.filename }}"

- name: Create base VM shell if import is required
  ansible.builtin.shell: |
    qm create {{ item.vmid }} \
      --name {{ item.name }} \
      --memory {{ item.memory }} \
      --cores {{ item.cores }} \
      --net0 virtio,bridge=vmbr0 \
      --ide2 {{ item.storage }}:cloudinit \
      --scsihw virtio-scsi-pci \
      --boot c \
      --bootdisk scsi0 \
      --agent 1 \
      --serial0 socket
  loop: "{{ proxmox_images }}"
  loop_control:
    label: "{{ item.filename }}"
  when: item.import | default(false)
  register: create_vm_shell
  failed_when: create_vm_shell.rc not in [0, 2]  # allow "already exists"

- name: Import image into Proxmox storage
  ansible.builtin.command:
    cmd: qm importdisk {{ item.vmid }} {{ proxmox_image_dir }}/{{ item.filename }} {{ item.storage }}
  loop: "{{ proxmox_images }}"
  loop_control:
    label: "{{ item.filename }}"
  when: item.import | default(false)

- name: Attach imported disk + add cloud-init + set bootdisk (idempotent)
  ansible.builtin.shell: |
    qm set {{ item.vmid }} \
      --scsi0 {{ item.storage }}:vm-{{ item.vmid }}-disk-0 \
      --boot c \
      --bootdisk scsi0 \
      --ide2 {{ item.storage }}:cloudinit
  loop: "{{ proxmox_images }}"
  loop_control:
    label: "{{ item.filename }}"
  register: set_result
  failed_when: set_result.rc not in [0,5]   # rc=5 = LV exists

- name: Convert VM to template (optional)
  ansible.builtin.command:
    cmd: qm template {{ item.vmid }}
  loop: "{{ proxmox_images }}"
  loop_control:
    label: "{{ item.filename }}"
  when: item.template | default(true)
