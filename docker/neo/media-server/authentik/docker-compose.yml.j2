---

services:

  authentik:
    container_name: authentik
    image: ghcr.io/goauthentik/server:2025.8.1
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    volumes:
      - {{ docker_appdata_path }}/authentik/media:/media
      - {{ docker_appdata_path }}/authentik/custom-templates:/templates
    env_file:
      - .env
    networks:
      - app_authentik
      - bridge_proxy_external
    ports:
      - "${COMPOSE_PORT_HTTP:-9090}:9000"
      - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - authentik-postgresql
      - authentik-redis

  authentik-postgresql:
    container_name: authentik-postgresql
    image: docker.io/library/postgres:17-alpine3.21
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    networks:
      - app_authentik
    volumes:
      - authentik-database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env

  authentik-redis:
    container_name: authentik-redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - app_authentik
    volumes:
      - authentik-redis:/data

  authentik-worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server:2025.8.1
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    networks:
      - app_authentik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ docker_appdata_path }}/authentik/media:/media
      - {{ docker_appdata_path }}/authentik/certs:/certs
      - {{ docker_appdata_path }}/authentik/custom-templates:/templates
    env_file:
      - .env
    depends_on:
      - authentik-postgresql
      - authentik-redis

volumes:
  authentik-database:
    driver: local
  authentik-redis:
    driver: local
