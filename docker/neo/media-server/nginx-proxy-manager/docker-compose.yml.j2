services:
  npm-internal:
    container_name: npm-internal
    image: 'jc21/nginx-proxy-manager:2.12.6'
    environment:
      DISABLE_IPV6: 'true'
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    networks:
      default:
      vpn_gluetun:
    volumes:
      - {{ docker_appdata_path }}/npm-internal/data:/data
      - {{ docker_appdata_path }}/npm-internal/letsencrypt:/etc/letsencrypt
    # 1) Add A record in domain registrar mapping internal subdomain (e.g. 'internal.example.com') to internal proxy' IP (e.g. 192.168.1.54)
    # 2) Add wildcard record in DNS Resolver for same
    #    https://docs.netgate.com/pfsense/en/latest/services/dns/wildcards.html#dns-resolver-unbound
    # 3) Define proxy hosts with (Docker) internal hostnames (e.g. roms.internal.example.com -> gaseous-server:80 )

  npm-external:
    container_name: npm-external
    image: 'jc21/nginx-proxy-manager:2.12.6'
    environment:
      DISABLE_IPV6: 'true'
    # ports:
    #  These ports are in format <host-port>:<container-port>
    #  - '80:80' # Public HTTP Port
    #  - '443:443' # Public HTTPS Port
    #  - '81:81' # Admin Web Port
    networks:
      bridge_proxy_external:
      vlan_proxy_external:
        ipv4_address: 192.168.1.9 # IP address inside the defined range
    # Note that proxy host destinations must use hostname:internal-port
    # Example:
    #   http://overseerr:5055

    volumes:
      - {{ docker_appdata_path }}/npm/data:/data
      - {{ docker_appdata_path }}/npm/letsencrypt:/etc/letsencrypt

  fail2ban:
    # See: https://blog.lrvt.de/fail2ban-with-nginx-proxy-manager/
    # Note that NPM must include configuration in the advanced tab of proxy host with CloudFlare proxy: real_ip_header CF-Connecting-IP;
    container_name: fail2ban
    hostname: fail2ban
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      F2B_DB_PURGE_AGE: "14d"
    image: crazymax/fail2ban:1.1.0
    network_mode: host
    restart: unless-stopped
    volumes:
      - {{ docker_appdata_path }}/fail2ban:/data
      - {{ docker_appdata_path }}/npm/data/logs:/var/log/npm:ro